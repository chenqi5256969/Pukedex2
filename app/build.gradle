apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply from: '../dependencies.gradle'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

android {
    Properties properties = new Properties()
    properties.load project.rootProject.file('local.properties').newDataInputStream()
    def pukedexFile = properties.getProperty("storeFile")
    def pukedexPassword = properties.getProperty("storePassword")
    def pukedexKeyPassword = properties.getProperty("keyPassword")
    def pukedexKeyAlias = properties.getProperty("keyAlias")
    signingConfigs {
        Pukedex {
            storeFile file("${pukedexFile}")
            storePassword "${pukedexPassword}"
            keyPassword "${pukedexKeyPassword}"
            keyAlias "${pukedexKeyAlias}"
        }
    }
    compileSdkVersion versions.compileSdkVersion
    buildToolsVersion "29.0.3"


    defaultConfig {
        applicationId "com.revenco.pukedex2"
        minSdkVersion versions.minSdkVersion
        targetSdkVersion versions.targetSdkVersion
        versionCode versions.versionCode
        versionName versions.versionName
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.Pukedex
        }

        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    //exclude 在打包时移除项目中的相关文件，不打入apk文件中
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude("META-INF/*.kotlin_module")
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "androidx.appcompat:appcompat:$versions.appcompat"

    implementation "org.jetbrains.kotlin:kotlin-stdlib: $versions.kotlin_version"
    implementation "androidx.core:core-ktx:$versions.core_ktx"

    //android support
    implementation "androidx.constraintlayout:constraintlayout:$versions.constraintlayout"
    implementation "com.google.android.material:material:$versions.materialVersion"

    //架构组件
    implementation "androidx.lifecycle:lifecycle-extensions:$versions.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$versions.lifecycleVersion"
    implementation "androidx.room:room-runtime:$versions.roomVersion"
    implementation "androidx.room:room-ktx:$versions.roomVersion"
    kapt "androidx.room:room-compiler:$versions.roomVersion"

    // startup
    implementation "androidx.startup:startup-runtime:$versions.startupVersion"

    //dagger
    implementation "com.google.dagger:hilt-android:$versions.daggerHiltAndroidVersion"
    implementation "com.google.dagger:hilt-android-testing:$versions.daggerHiltAndroidVersion"
    implementation "androidx.hilt:hilt-common:$versions.daggerHiltVersion"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$versions.daggerHiltVersion"
    kapt "com.google.dagger:hilt-android-compiler:$versions.daggerHiltAndroidVersion"
    kapt "androidx.hilt:hilt-compiler:$versions.daggerHiltVersion"

    //network
    implementation "com.github.skydoves:sandwich:$versions.sandwichVersion"
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$versions.retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$versions.okhttpVersion"

    // moshi
    implementation "com.squareup.moshi:moshi-kotlin:$versions.moshiVersion"
    implementation "com.squareup.moshi:moshi-kotlin-codegen:$versions.moshiVersion"

    // coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutinesVersion"

    // glide
    implementation "com.github.bumptech.glide:glide:$versions.glideVersion"
    implementation "com.github.florent37:glidepalette:$versions.glidePaletteVersion"
    kapt "com.github.bumptech.glide:compiler:$versions.glideVersion"

    // transformation
    implementation "com.github.skydoves:transformationlayout:$versions.transformationLayout"

    //adapter
    implementation "com.github.CymChad:BaseRecyclerViewAdapterHelper:$versions.baseAdapter"

    // whatIf
    implementation "com.github.skydoves:whatif:$versions.whatIfVersion"

    // custom views
    implementation "com.github.skydoves:progressview:$versions.progressViewVersion"

}